{"uid":"e05d78317ad9c761","name":"Verify updating profile with empty payload should return Bad Request","fullName":"org.api.tests.UserManagementTest.updateProfileWithEmptyPayloadShouldReturnBadRequest","historyId":"1467717448d2b55f0ae39e91e31afbae","time":{"start":1755807470924,"stop":1755807471904,"duration":980},"description":"This test case verifies that updating a user profile with an empty payload returns a 400 Bad Request status.","descriptionHtml":"<p>This test case verifies that updating a user profile with an empty payload returns a 400 Bad Request status.</p>\n","status":"failed","statusMessage":"expected [400] but found [500]","statusTrace":"java.lang.AssertionError: expected [400] but found [500]\n\tat org.testng.Assert.fail(Assert.java:111)\n\tat org.testng.Assert.failNotEquals(Assert.java:1590)\n\tat org.testng.Assert.assertEqualsImpl(Assert.java:150)\n\tat org.testng.Assert.assertEquals(Assert.java:132)\n\tat org.testng.Assert.assertEquals(Assert.java:1431)\n\tat org.testng.Assert.assertEquals(Assert.java:1395)\n\tat org.testng.Assert.assertEquals(Assert.java:1441)\n\tat org.api.tests.UserManagementTest.updateProfileWithEmptyPayloadShouldReturnBadRequest(UserManagementTest.java:122)\n\tat java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:580)\n\tat org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)\n\tat org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)\n\tat org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)\n\tat org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)\n\tat org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)\n\tat org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)\n\tat org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)\n\tat org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1596)\n\tat org.testng.TestRunner.privateRun(TestRunner.java:741)\n\tat org.testng.TestRunner.run(TestRunner.java:616)\n\tat org.testng.SuiteRunner.runTest(SuiteRunner.java:421)\n\tat org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)\n\tat org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)\n\tat org.testng.SuiteRunner.run(SuiteRunner.java:312)\n\tat org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)\n\tat org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)\n\tat org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)\n\tat org.testng.TestNG.runSuitesLocally(TestNG.java:1208)\n\tat org.testng.TestNG.runSuites(TestNG.java:1112)\n\tat org.testng.TestNG.run(TestNG.java:1079)\n\tat org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:324)\n\tat org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:74)\n\tat org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:123)\n\tat org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:456)\n\tat org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:169)\n\tat org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:595)\n\tat org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:581)\n","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"description":"This test case verifies that updating a user profile with an empty payload returns a 400 Bad Request status.","status":"failed","statusMessage":"expected [400] but found [500]","statusTrace":"java.lang.AssertionError: expected [400] but found [500]\n\tat org.testng.Assert.fail(Assert.java:111)\n\tat org.testng.Assert.failNotEquals(Assert.java:1590)\n\tat org.testng.Assert.assertEqualsImpl(Assert.java:150)\n\tat org.testng.Assert.assertEquals(Assert.java:132)\n\tat org.testng.Assert.assertEquals(Assert.java:1431)\n\tat org.testng.Assert.assertEquals(Assert.java:1395)\n\tat org.testng.Assert.assertEquals(Assert.java:1441)\n\tat org.api.tests.UserManagementTest.updateProfileWithEmptyPayloadShouldReturnBadRequest(UserManagementTest.java:122)\n\tat java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:580)\n\tat org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)\n\tat org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)\n\tat org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)\n\tat org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)\n\tat org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)\n\tat org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)\n\tat org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)\n\tat org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1596)\n\tat org.testng.TestRunner.privateRun(TestRunner.java:741)\n\tat org.testng.TestRunner.run(TestRunner.java:616)\n\tat org.testng.SuiteRunner.runTest(SuiteRunner.java:421)\n\tat org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)\n\tat org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)\n\tat org.testng.SuiteRunner.run(SuiteRunner.java:312)\n\tat org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)\n\tat org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)\n\tat org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)\n\tat org.testng.TestNG.runSuitesLocally(TestNG.java:1208)\n\tat org.testng.TestNG.runSuites(TestNG.java:1112)\n\tat org.testng.TestNG.run(TestNG.java:1079)\n\tat org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:324)\n\tat org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:74)\n\tat org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:123)\n\tat org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:456)\n\tat org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:169)\n\tat org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:595)\n\tat org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:581)\n","steps":[],"attachments":[{"uid":"285bad447e2ab6a2","name":"Request","source":"285bad447e2ab6a2.html","type":"text/html","size":691},{"uid":"e6f21222713b3760","name":"HTTP/1.1 200 ","source":"e6f21222713b3760.html","type":"text/html","size":1476},{"uid":"22ec9e352acc022c","name":"Request","source":"22ec9e352acc022c.html","type":"text/html","size":1109},{"uid":"8fe930b7eaa70fc4","name":"HTTP/1.1 500 ","source":"8fe930b7eaa70fc4.html","type":"text/html","size":1404}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":4,"hasContent":true},"afterStages":[],"labels":[{"name":"package","value":"org.api.tests.UserManagementTest"},{"name":"testClass","value":"org.api.tests.UserManagementTest"},{"name":"testMethod","value":"updateProfileWithEmptyPayloadShouldReturnBadRequest"},{"name":"parentSuite","value":"API Test Suite"},{"name":"suite","value":"API Test"},{"name":"subSuite","value":"org.api.tests.UserManagementTest"},{"name":"host","value":"pkrvmqc4gcfdwos"},{"name":"thread","value":"2490@pkrvmqc4gcfdwos.main(1)"},{"name":"framework","value":"testng"},{"name":"language","value":"java"},{"name":"story","value":"Update User Profile with Empty Payload"},{"name":"feature","value":"User Profile Service"},{"name":"epic","value":"User Management"},{"name":"severity","value":"normal"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":9,"broken":0,"skipped":0,"passed":0,"unknown":3,"total":12},"items":[{"uid":"f1ee7a3122ed79b0","reportUrl":"https://rangegowdaym.github.io/apiassured/19//#testresult/f1ee7a3122ed79b0","status":"failed","statusDetails":"expected [400] but found [500]","time":{"start":1755721122479,"stop":1755721123403,"duration":924}},{"uid":"c41337fd60213675","reportUrl":"https://rangegowdaym.github.io/apiassured/18//#testresult/c41337fd60213675","status":"failed","statusDetails":"expected [400] but found [500]","time":{"start":1755634691515,"stop":1755634692444,"duration":929}},{"uid":"588578c77eaef048","reportUrl":"https://rangegowdaym.github.io/apiassured/17//#testresult/588578c77eaef048","status":"failed","statusDetails":"expected [400] but found [500]","time":{"start":1755548252758,"stop":1755548253690,"duration":932}},{"uid":"521a5d4726478455","reportUrl":"https://rangegowdaym.github.io/apiassured/16//#testresult/521a5d4726478455","status":"failed","statusDetails":"expected [400] but found [500]","time":{"start":1755461897528,"stop":1755461898475,"duration":947}},{"uid":"a85583a329b99bc","reportUrl":"https://rangegowdaym.github.io/apiassured/15//#testresult/a85583a329b99bc","status":"failed","statusDetails":"expected [400] but found [500]","time":{"start":1755375411848,"stop":1755375412900,"duration":1052}},{"uid":"d7739a173002c1b6","reportUrl":"https://rangegowdaym.github.io/apiassured/14//#testresult/d7739a173002c1b6","status":"failed","statusDetails":"expected [400] but found [500]","time":{"start":1755289088332,"stop":1755289089282,"duration":950}},{"uid":"15ab5a63986fa348","reportUrl":"https://rangegowdaym.github.io/apiassured/13//#testresult/15ab5a63986fa348","status":"failed","statusDetails":"expected [400] but found [500]","time":{"start":1755279541775,"stop":1755279542734,"duration":959}},{"uid":"769d483a48f94522","reportUrl":"https://rangegowdaym.github.io/apiassured/10//#testresult/769d483a48f94522","status":"failed","statusDetails":"expected [400] but found [500]","time":{"start":1755273347061,"stop":1755273348101,"duration":1040}},{"uid":"a2a18d4a3fb14927","reportUrl":"https://rangegowdaym.github.io/apiassured/9//#testresult/a2a18d4a3fb14927","status":"unknown","time":{"start":1755270222347,"stop":1755270222347,"duration":0}},{"uid":"74ff4345b6500f80","reportUrl":"https://rangegowdaym.github.io/apiassured/8//#testresult/74ff4345b6500f80","status":"unknown","time":{"start":1755269375350,"stop":1755269375350,"duration":0}},{"uid":"dd30c9f2c415f706","reportUrl":"https://rangegowdaym.github.io/apiassured/7//#testresult/dd30c9f2c415f706","status":"unknown","time":{"start":1755267169486,"stop":1755267169487,"duration":1}}]},"tags":[]},"source":"e05d78317ad9c761.json","parameterValues":[]}